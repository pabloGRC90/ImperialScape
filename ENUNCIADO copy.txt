
Se podrán registrar usuarios que podrán:
------------------------------------------------------------------------------------------------------------------
- Solicitar jugar una partida: se iniciará una partida [ 3 - 5 ] Jugadores.
- En una partida, el sistema irá lanzando a los jugadores de forma aleatoria enigmas.

Si los jugadores los resuelven irán sumando llaves, lo que irá puntuando de forma correspondiente. 
El primer marine que consiga una llave ascenderá a almirante y podrá decidir qué jugadores resuelven los enigmas (incluido él mismo) y ya no lo decidirá el sistema, a no ser que tarde demasiado 30". 
Cuando un marine falle X número de enigmas el almirante puede decidir: restar 1 minuto o inhabilitar a ese marine.

- Saldrán del barco si han conseguido 5 llaves en menos de 30'.
- El sistema registra para cada partida: jugadores con sus roles, puntuación, llaves conseguidas y tiempo en salir, si lo consiguieron.
- Se podrá ver un ranking de jugadores.
- Cada jugador podrá ver las partidas que ha jugado, con quién…
------------------------------------------------------------------------------------------------------------------


La aplicación consta de:
------------------------------------------------------------------------------------------------------------------
- Página de inicio que permita entrar al sistema y enlace a página de login, registro y restaurar contraseña.
- En la página de inicio tendremos una integración con reCaptcha de Google en el login.

    - Como usuario estándar, podremos:
        - Solicitar comenzar una partida.
        - Resolver enigmas cuando le sean asignados.
        - Ver ranking de jugadores.
        - Ver las partidas que ha jugado y los datos de la partida.
		- Ver jugadores conectados.

    - Como usuario administrador, podremos:
        - Con un CRUD, gestionar a los usuarios, altas, bajas, modificaciones, activaciones… los usuarios estarán desactivados por defecto hasta que los active el administrador. 
        - También se podrán crear otros administradores (o quitarles los privilegios a los actuales)

    - Como usuario editor, podremos:
        - Gestionar las preguntas que el sistema lanza como enigmas.
        - Acceso a estadísticas internas sobre las partidas, preguntas…
------------------------------------------------------------------------------------------------------------------



Para el módulo de CLIENTE se tendrá en cuenta:
------------------------------------------------------------------------------------------------------------------
- CLIENTE:
	- Código JavaScript estructurado y coherente, separado correctamente del resto de codificación.
	- Utilización correcta de funciones y estructuras de almacenamiento JavaScript.
	- Análisis del problema utilizando POO.
	- Utilización correcta de la cadena de prototipos de JavaScript.
	- Integración correcta de reCaptcha de Google (v3).
	- Uso de metodología Scrum, se valorará:
		- Planificación de tareas por unidad funcional y coherencia.
		- Sprints desarrollando lo planificado.
		- Proyecto sincronizado con un repositorio en Github que se envía al profesor para su seguimiento.
      
	




































- METODOLOGÍA SCRUM
------------------------------------------------------------------------------------------------------------------
SCRUM es una metodología ágil en la que se aplican regularmente un conjunto de buenas prácticas para trabajar en equipo y obtener el mejor resultado en el proyecto. 
En SCRUM se realizan entregas parciales y regulares del producto final, priorizándolas según el beneficio que aportan al receptor del proyecto (cliente).

- ROLES:
	- Product Owner: analiza qué es lo que quiere el cliente final en su proyecto y lo detalla en una lista priorizada (product backlog).
	- Scrum Master: organiza y facilita el trabajo. Defiende la metodología a llevar a cabo ante el product owner.
	- Team: equipo de desarrolladores. Analizan las tareas del product backlog, detallan los ítems que van a contener, su prioridad y tiempo que les llevará.

- SPRINTS: (El trabajo se organiza en sprints) 
    - Cuando comienza un sprint, existe un tablero donde se encuentran todas las tareas sin asignar pendientes (backlog), y que cada desarrollador irá escogiendo (teniendo en cuenta al equipo) y asignando según sus preferencias, ritmo de trabajo...
    - Un sprint tiene un tiempo acotado (por ejemplo 2 semanas) y en él se incluyen las tareas (historias) establecidas en el product backlog.
    - El sprint comienza con una planificación (planning): se reúne el team, product owner y scrum master. Analizan cada tarea establecida por el product owner en el backlog. 
        - Se prioriza, determinando la dificultad técnica por el equipo de desarrollo y se establece el tiempo que tardará en completarse. 
        - Una vez analizada, se decide si esa tarea “cabe” en dicho sprint, en cuyo caso, el team se COMPROMETE a realizarla en dicho sprint.
    - Cuando finaliza el sprint, se realiza una retrospectiva analizando lo que se ha hecho bien y lo que se ha hecho mal, para proponer mejoras al respecto. 
    - Después se realiza una demo de las historias del sprint que se han completado, ante el product owner (y a veces ante el cliente final).
    - Cada día del sprint se hará una pequeña reunión denominada daily (10’) en la que cada miembro del equipo de desarrollo cuenta en lo que ha trabajado, las dificultades y si necesita ayuda por parte del resto del equipo.
    ------------------------------------------------------------------------------------------------------------------